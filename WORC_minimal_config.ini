# Structure of the variables in the VRE
# name: what is passed in the dictionary to the tool
# description: what is shown in the UI
# help: is the hint message
# type:
# required: always true
# allow_multiple: always false
# default: take them from this document

# RULE: how to set names for arguments
# in database: <first>:<second>:<third>
# <first> - name it by section names
# <second> - name it by the text within [] IMPORTANT
# <third> - name it by the argument name IMPORTANT
# Example for variable log will be
# <first> - radiomics
# <second> - ImageFeatures
# <third> - log
# radiomics:ImageFeatures:log
# radiomics:PyRadiomics:extract_shape

# Section name: General
[General]
Segmentix = True # 
tempsave = False # need to set to False
AssumeSameImageAndMaskMetadata = False # need to set to True
ComBat = False

# Section name: Image pre-processing (ignored if features are provided)
[Preprocessing]
Normalize = True  # essential, the rest are optional
Clipping = False
Clipping_Range = -1000.0, 3000.0  # type is text. help: Comma separated lower- and upperbound of intensities to be used in clipping.
Method = z_score  # type is dropdown menu: z_score, minmed
Resampling = False
Resampling_spacing = 1, 1, 1  # type is text: Comma separated ...
BiasCorrection = False
; BiasCorrection_Mask = False

# Section name: Feature extraction (ignored if features are provided)
[ImageFeatures]
; shape = True
histogram = True
orientation = True
texture_Gabor = False
texture_LBP = True
texture_GLCM = True
texture_GLCMMS = True
vessel = False
log = False
phase = False
[PyRadiomics]
extract_shape = True
texture_GLRLM = True
texture_GLSZM = True
texture_GLDM = True
texture_NGTDM = True

# Section name: Feature harmonisation (in vre it's feat preproc)
[ComBat]
batch = Hospital  # Help: Name of batch variable = variable to correct for. The variable must correspond to the column name where the grouping occurs.
; mod = []  # list of strings with label names (imaginary_label_1, etc)

# Section name: Feature selection
# the following are the probabilities if a particular featselection will be used or not (except for groupwiseSearch, which is used always)
[Featsel]
; GroupwiseSearch = True  # this should be False if you use your own features
Variance = 1.0  # text box with type double (max 1.0, min 0.0)
SelectFromModel = 0.275 # text box with type double (max 1.0, min 0.0)
UsePCA = 0.275 # text box with type double (max 1.0, min 0.0)
StatisticalTestUse = 0.275 # text box with type double (max 1.0, min 0.0)
ReliefUse = 0.275 # text box with type double (max 1.0, min 0.0)


# oversampling, undersampling, SMOTE. This is a probability: 1->always use. Add a hint to set it to 1 when there's a big class imbalance
# Section name: Machine Learning
"Mode" remove "regression"
"Labels to predict (comma separated for multiclass classification)" keep as it is
[Labels]
label_names = imaginary_label_1
Add: "Probability of using class balancing methods (oversampling, undersampling, etc)"
[Resampling]
Use = 0.0  # default is 0.2

# keep the format for this part
# Add text above "Classifiers"
[Classification]
classifiers = SVM, RF, LR, LDA, QDA, GaussianNB, AdaBoostClassifier, XGBClassifier
# names should be classifires_SMV, classifires_RF

# Add text above "Cross validation settings"
[CrossValidation]
Type = random_split
N_iterations = 10
test_size = 0.2
fixed_seed = False

# Add text above "Hyperparameter optimisation settings"
[HyperOptimization]  # the setup below produces 5000 models
; scoring_method = f1_weighted, average_precision_weighted, gmean, balanced_accuracy  # maybe a free-text and refer to scikit metrics
test_size = 0.2
n_splits = 5  # number of CV splits
N_iterations = 1000  # number of workflows
n_jobspercore = 500 # 8 cores


